<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

namespace ymobiz\components;


use Yii;
use yii\base\InvalidConfigException;
use yii\helpers\Url;
use yii\helpers\Html;
use yii\helpers\Json;
use yii\widgets\InputWidget;
use yii\captcha\Captcha;
use yii\captcha\CaptchaAction;

/**
 * Captcha renders a CAPTCHA image and an input field that takes user-entered verification code.
 *
 * Captcha is used together with [[CaptchaAction]] provide [CAPTCHA](http://en.wikipedia.org/wiki/Captcha)
 * - a way of preventing Website spamming.
 *
 * The image element rendered by Captcha will display a CAPTCHA image generated by
 * an action whose route is specified by [[captchaAction]]. This action must be an instance of [[CaptchaAction]].
 *
 * When the user clicks on the CAPTCHA image, it will cause the CAPTCHA image
 * to be refreshed with a new CAPTCHA.
 *
 * You may use [[\yii\captcha\CaptchaValidator]] to validate the user input matches
 * the current CAPTCHA verification code.
 *
 * @author Qiang Xue <qiang.xue@gmail.com>
 * @since 2.0
 */
class ymoCaptcha extends Captcha
{
    /**
     * @var string|array the route of the action that generates the CAPTCHA images.
     * The action represented by this route must be an action of [[CaptchaAction]].
     * Please refer to [[\yii\helpers\Url::toRoute()]] for acceptable formats.
     */
    public $captchaAction = 'captcha';
    
    public $captchaModuleAction = 'captcha';
    
    public $captchaModule = 'site';
    
    public $captchaRoute = false;

    /**
     * Returns the options for the captcha JS widget.
     * @return array the options
     */
    protected function getClientOptions()
    {
        $route = $this->captchaAction;
       	if($this->captchaRoute!=false){
       		
       		$options = [
       			'refreshUrl' => '/' . $this->captchaModule . '/' . $this->captchaRoute . '/' . $this->captchaModuleAction . '?' . CaptchaAction::REFRESH_GET_VAR . '=1',
       			'hashKey' => "yiiCaptcha/$this->captchaModule/$this->captchaRoute/$this->captchaModuleAction",
       		];
       		
       	}else{
	        if (is_array($route)) {
	            $route[CaptchaAction::REFRESH_GET_VAR] = 1;
	        } else {
	            $route = [$route, CaptchaAction::REFRESH_GET_VAR => 1];
	        }
	        
	        $options = [
	        	'refreshUrl' => Url::toRoute($route),
	        	'hashKey' => "yiiCaptcha/{$route[0]}",
	        ];
       	}

        return $options;
    }
}
